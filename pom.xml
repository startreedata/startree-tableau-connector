<?xml version="1.0"?>
<!--

    Copyright 2022 StarTree Inc.

    Licensed under the StarTree Community License (the "License"); you may not use
    this file except in compliance with the License.  You may obtain a copy of the
    License at http://www.startree.ai/startree-community-license

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
    WARRANTIES OF ANY KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <version>1.0</version>
  <packaging>pom</packaging>

<!--  <parent>-->
<!--    <artifactId>startree-pinot-connectors</artifactId>-->
<!--    <groupId>ai.startree.pinot</groupId>-->
<!--    <version>${revision}</version>-->
<!--  </parent>-->

  <artifactId>startree-tableau-connector</artifactId>
  <name>StarTree Tableau Connector</name>
  <groupId>ai.startree.pinot</groupId>
  <url>https://startree.ai/</url>

  <properties>
    <pinot.root>${basedir}</pinot.root>
    <connector.assembly.name>${project.groupId}-${project.version}</connector.assembly.name>
    <taco.signing.keystore>taco.jks</taco.signing.keystore>
    <taco.signing.alias>alias</taco.signing.alias>
    <taco.signing.storepass>storepass</taco.signing.storepass>
    <taco.signing.keypass></taco.signing.keypass>
  </properties>

  <licenses>
    <license>
      <name>StarTree Community License</name>
      <url>https://raw.githubusercontent.com/startreedata/startree-tableau-connector/master/LICENSE</url>
      <distribution>repo</distribution>
      <comments>A StarTree community-friendly license</comments>
    </license>
  </licenses>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <finalName>${connector.assembly.name}</finalName>
              <appendAssemblyId>false</appendAssemblyId>
              <descriptors>
                <descriptor>taco-assembly.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
         </executions>
      </plugin>

      <plugin>
        <artifactId>maven-jarsigner-plugin</artifactId>
        <executions>
          <execution>
            <id>sign</id>
            <phase>package</phase>
            <goals>
              <goal>sign</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <keystore>${taco.signing.keystore}</keystore>
          <alias>${taco.signing.alias}</alias>
          <storepass>${taco.signing.storepass}</storepass>
          <keypass>${taco.signing.keypass}</keypass>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <move file="${project.build.directory}/${connector.assembly.name}.jar" tofile="${project.build.directory}/${connector.assembly.name}.taco" />
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>4.0</version>
        <configuration>
          <licenseSets>
            <licenseSet>
              <header>${pinot.root}/HEADER</header>
<!--              <headerDefinitions>-->
<!--                <headerDefinition>${pinot.root}/headerdefinition.xml</headerDefinition>-->
<!--              </headerDefinitions>-->
              <excludes>
                <!-- Text and log files -->
                <exclude>**/*.txt</exclude>
                <exclude>**/*.log</exclude>
                <exclude>**/*.list</exclude>
                <exclude>**/*.out</exclude>
                <exclude>**/*.generated</exclude>
                <exclude>**/*.json</exclude>
                <exclude>**/*.schema</exclude>
                <exclude>**/*.conf</exclude>
                <exclude>**/*.properties</exclude>

                <!-- JDBC Drivers -->
                <exclude>**/java.sql.*</exclude>

                <!-- Spark datasource register -->
                <exclude>**/org.apache.spark.sql.sources.DataSourceRegister</exclude>

                <!-- Binary files -->
                <exclude>**/*.avro</exclude>
                <exclude>**/*.avsc</exclude>
                <exclude>**/*.csv</exclude>
                <exclude>**/*.desc</exclude>
                <exclude>**/*.parquet</exclude>
                <exclude>**/*.gz</exclude>
                <exclude>**/*.orc</exclude>
                <exclude>**/*.dict</exclude>
                <exclude>**/*.raw</exclude>
                <exclude>**/*.mapping</exclude>
                <exclude>**/*.ser</exclude>
                <exclude>**/*.v1</exclude>
                <exclude>**/*.v2</exclude>
                <exclude>**/*.MockMaker</exclude>

                <!-- Auto-generated target directories -->
                <exclude>target/**</exclude>
                <exclude>pinot-*/target/**</exclude>

                <!-- CI m2 dependencies directories -->
                <exclude>m2/**</exclude>

                <!-- Docker and Kubernetes (not part of the distribution) -->
                <exclude>kubernetes/**</exclude>
                <exclude>docker/**</exclude>

                <!-- Pinot-Druid Benchmark (not part of the distribution) -->
                <exclude>contrib/**</exclude>

                <!-- Top level files -->
                <exclude>HEADER</exclude>
                <exclude>LICENSE*</exclude>
                <exclude>NOTICE*</exclude>

                <!-- js, css files that are exact copies of the third-party works. In this case, the original header has to
                be kept. Please refer to 'Treatment of Third-party works' in https://www.apache.org/legal/src-headers.html
                -->
                <exclude>**/node_modules/**</exclude>
                <exclude>**/dist/**</exclude>
                <exclude>**/src/main/resources/*.*rc</exclude>

                <!-- files from Eclipse -->
                <exclude>**/maven-eclipse.xml</exclude>
                <exclude>.externalToolBuilders/**</exclude>

                <!-- Auto-generated protobuf test classes -->
                <exclude>**/test/**/protobuf/**Generated.java</exclude>
              </excludes>
            </licenseSet>
          </licenseSets>
          <mapping>
            <java>JAVADOC_STYLE</java>
            <scala>JAVADOC_STYLE</scala>
            <thrift>JAVADOC_STYLE</thrift>
            <g4>JAVADOC_STYLE</g4>
            <ts>JAVADOC_STYLE</ts>
            <tsx>JAVADOC_STYLE</tsx>
            <config>SCRIPT_STYLE</config>
            <queries>SCRIPT_STYLE</queries>
            <results>SCRIPT_STYLE</results>
            <MockMaker>SCRIPT_STYLE</MockMaker>
            <appAssemblerScriptTemplate>SCRIPT_STYLE</appAssemblerScriptTemplate>
            <pql>SCRIPT_STYLE</pql>
            <sql>SCRIPT_STYLE</sql>
            <conf>DOUBLESLASH_STYLE</conf>
            <cfg>DOUBLESLASH_STYLE</cfg>
            <proto>DOUBLESLASH_STYLE</proto>
            <rst>RST_STYLE</rst>
            <readme>RST_STYLE</readme>
          </mapping>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>
</project>
